/* Interface */
#define function setValue(uint256) nonpayable returns ()
#define function getValue() view returns (uint256)

/* Storage Slots */
#define constant VALUE_LOCATION = FREE_STORAGE_POINTER()

/* Methods */
#define macro SET_VALUE() = takes (0) returns (0) {
    // reading from byte 4 to allow for function selector
    0x04 calldataload   // [value]
    [VALUE_LOCATION]    // [ptr, value]
    sstore              // []
}

#define macro GET_VALUE() = takes (0) returns (0) {
    // Load value from storage.
    [VALUE_LOCATION]   // [ptr]
    sload              // [value]

    // Store value in memory.
    0x00               // [0x00, value]
    mstore             // []

    // Return the first 32 bytes of memory containing our uint256
    0x20               // [0x20]
    0x00               // [0x00, 0x20]
    return             // []
}

#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(setValue) eq set jumpi // Compare function selector to setValue(uint256)
    dup1 __FUNC_SIG(getValue) eq get jumpi // Compare function selector to setValue(uint256)

    set:
        SET_VALUE()
    get:
        GET_VALUE()

    0x00 0x00 revert
}